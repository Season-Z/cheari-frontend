{"version":3,"file":"index.umd.js","sources":["../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_listCacheClear.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/eq.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_assocIndexOf.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_listCacheDelete.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_listCacheGet.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_listCacheHas.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_listCacheSet.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_ListCache.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_stackClear.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_stackDelete.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_stackGet.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_stackHas.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_freeGlobal.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_root.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_Symbol.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getRawTag.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_objectToString.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseGetTag.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObject.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_coreJsData.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_isMasked.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_toSource.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseIsNative.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getValue.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getNative.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_Map.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_nativeCreate.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hashClear.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hashDelete.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hashGet.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hashHas.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hashSet.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_Hash.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_mapCacheClear.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_isKeyable.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getMapData.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_mapCacheDelete.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_mapCacheGet.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_mapCacheHas.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_mapCacheSet.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_MapCache.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_stackSet.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_Stack.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_setCacheAdd.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_setCacheHas.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_SetCache.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_arraySome.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_cacheHas.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_equalArrays.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_Uint8Array.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_mapToArray.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_setToArray.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_equalByTag.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_arrayPush.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isArray.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseGetAllKeys.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_arrayFilter.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/stubArray.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getSymbols.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseTimes.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObjectLike.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseIsArguments.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isArguments.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/stubFalse.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isBuffer.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_isIndex.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isLength.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseIsTypedArray.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseUnary.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_nodeUtil.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isTypedArray.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_arrayLikeKeys.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_isPrototype.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_overArg.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_nativeKeys.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseKeys.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isArrayLike.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/keys.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getAllKeys.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_equalObjects.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_DataView.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_Promise.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_Set.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_WeakMap.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getTag.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseIsEqualDeep.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseIsEqual.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isEqual.js","../../../node_modules/.pnpm/@remix-run+router@1.19.1/node_modules/@remix-run/router/dist/router.js","../../../node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js","../src/utils/bread.tsx","../../hooks/dist/hooks.mjs","../src/utils/context.ts","../src/core/breadcrumb/index.tsx","../src/core/header/index.tsx","../src/core/loading/index.tsx","../src/core/layout/index.tsx","../src/hooks/useNavVisible.ts","../src/utils/navigate.ts","../src/core/navigation/switch-icon.tsx","../src/core/navigation/navigation-item.tsx","../src/core/navigation/navigation-list.tsx","../src/core/navigation/toggle-icon.tsx","../src/core/navigation/index.tsx"],"sourcesContent":["/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","/**\n * @remix-run/router v1.19.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial) {\n  if (allowPartial === void 0) {\n    allowPartial = false;\n  }\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass DataWithResponseInit {\n  constructor(data, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data;\n    this.init = init || null;\n  }\n}\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nfunction data(data, init) {\n  return new DataWithResponseInit(data, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.unstable_dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.unstable_patchRoutesOnNavigation;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // FIFO queue of previously discovered routes to prevent re-calling on\n  // subsequent navigations to the same path\n  let discoveredRoutesMaxSize = 1000;\n  let discoveredRoutes = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    let isRouteInitialized = m => {\n      // No loader, nothing to initialize\n      if (!m.route.loader) {\n        return true;\n      }\n      // Explicitly opting-in to running on hydration\n      if (typeof m.route.loader === \"function\" && m.route.loader.hydrate === true) {\n        return false;\n      }\n      // Otherwise, initialized if hydrated with data or an error\n      return loaderData && loaderData[m.route.id] !== undefined || errors && errors[m.route.id] !== undefined;\n    };\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(isRouteInitialized);\n    } else {\n      initialized = initialMatches.every(isRouteInitialized);\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = new Set();\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Map of pending patchRoutesOnNavigation() promises (keyed by path/matches) so\n  // that we only kick them off once for a given combo\n  let pendingPatchRoutes = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked\n            init.history.go(delta);\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      unstable_viewTransitionOpts: opts.viewTransitionOpts,\n      unstable_flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches: updatedMatches || matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let {\n          boundaryId,\n          error\n        } = handleDiscoverRouteError(location.pathname, discoverResult);\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches);\n      result = results[0];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(_extends({\n          navigation: loadingNavigation\n        }, actionData !== undefined ? {\n          actionData\n        } : {}), {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let {\n          boundaryId,\n          error\n        } = handleDiscoverRouteError(location.pathname, discoverResult);\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect([...loaderResults, ...fetcherResults]);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(request, redirect.result, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // During partial hydration, preserve SSR errors for routes that don't re-run\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      Object.entries(state.errors).filter(_ref2 => {\n        let [id] = _ref2;\n        return !matchesToLoad.some(m => m.route.id === id);\n      }).forEach(_ref3 => {\n        let [routeId, error] = _ref3;\n        errors = Object.assign(errors || {}, {\n          [routeId]: error\n        });\n      });\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      matches,\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let {\n          error\n        } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", fetchRequest, [match], requestMatches);\n    let actionResult = actionResults[0];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, {\n            fetcherSubmission: submission\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      if (fetchControllers.has(staleKey)) {\n        abortFetcher(staleKey);\n      }\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect([...loaderResults, ...fetcherResults]);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(revalidationRequest, redirect.result);\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let {\n          error\n        } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", fetchRequest, [match], matches);\n    let result = results[0];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result);\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true || redirect.response.headers.has(\"X-Remix-Replace\") ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches) {\n    try {\n      let results = await callDataStrategyImpl(dataStrategyImpl, type, request, matchesToLoad, matches, manifest, mapRouteProperties);\n      return await Promise.all(results.map((result, i) => {\n        if (isRedirectHandlerResult(result)) {\n          let response = result.result;\n          return {\n            type: ResultType.redirect,\n            response: normalizeRelativeRoutingRedirectResponse(response, request, matchesToLoad[i].route.id, matches, basename, future.v7_relativeSplatPath)\n          };\n        }\n        return convertHandlerResultToDataResult(result);\n      }));\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      return matchesToLoad.map(() => ({\n        type: ResultType.error,\n        error: e\n      }));\n    }\n  }\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    let [loaderResults, ...fetcherResults] = await Promise.all([matchesToLoad.length ? callDataStrategy(\"loader\", request, matchesToLoad, matches) : [], ...fetchersToLoad.map(f => {\n      if (f.matches && f.match && f.controller) {\n        let fetcherRequest = createClientSideRequest(init.history, f.path, f.controller.signal);\n        return callDataStrategy(\"loader\", fetcherRequest, [f.match], f.matches).then(r => r[0]);\n      } else {\n        return Promise.resolve({\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        });\n      }\n    })]);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, fetchersToLoad.map(f => f.controller ? f.controller.signal : null), true)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n        abortFetcher(key);\n      }\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref4) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref4;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function handleDiscoverRouteError(pathname, discoverResult) {\n    return {\n      boundaryId: findNearestBoundary(discoverResult.partialMatches).route.id,\n      error: getInternalRouterError(400, {\n        type: \"route-discovery\",\n        pathname,\n        message: discoverResult.error != null && \"message\" in discoverResult.error ? discoverResult.error : String(discoverResult.error)\n      })\n    };\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      // Don't bother re-calling patchRouteOnMiss for a path we've already\n      // processed.  the last execution would have patched the route tree\n      // accordingly so `matches` here are already accurate.\n      if (discoveredRoutes.has(pathname)) {\n        return {\n          active: false,\n          matches\n        };\n      }\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal) {\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      try {\n        await loadLazyRouteChildren(patchRoutesOnNavigationImpl, pathname, partialMatches, routesToUse, manifest, mapRouteProperties, pendingPatchRoutes, signal);\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        addToFifoQueue(pathname, discoveredRoutes);\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      // Avoid loops if the second pass results in the same partial matches\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        addToFifoQueue(pathname, discoveredRoutes);\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function addToFifoQueue(path, queue) {\n    if (queue.size >= discoveredRoutesMaxSize) {\n      let first = queue.values().next().value;\n      queue.delete(first);\n    }\n    queue.add(path);\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      unstable_dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, unstable_dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      unstable_dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, unstable_dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `HandlerResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isHandlerResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, unstable_dataStrategy);\n      result = results[0];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, unstable_dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, unstable_dataStrategy) {\n    let results = await callDataStrategyImpl(unstable_dataStrategy || defaultDataStrategy, type, request, matchesToLoad, matches, manifest, mapRouteProperties, requestContext);\n    return await Promise.all(results.map((result, i) => {\n      if (isRedirectHandlerResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, matchesToLoad[i].route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      return convertHandlerResultToDataResult(result);\n    }));\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Add an ?index param for matched index routes if we don't already have one\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref5) => {\n        let [name, value] = _ref5;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, isInitialLoad, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[0] : undefined;\n  let boundaryMatches = boundaryId ? getLoaderMatchesUntilBoundary(matches, boundaryId) : matches;\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (isInitialLoad) {\n      if (typeof route.loader !== \"function\" || route.loader.hydrate) {\n        return true;\n      }\n      return state.loaderData[route.id] === undefined && (\n      // Don't re-run if the loader ran and threw an error\n      !state.errors || state.errors[route.id] === undefined);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial load (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (isInitialLoad || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Idempotent utility to execute patchRoutesOnNavigation() to lazily load route\n * definitions and update the routes/routeManifest\n */\nasync function loadLazyRouteChildren(patchRoutesOnNavigationImpl, path, matches, routes, manifest, mapRouteProperties, pendingRouteChildren, signal) {\n  let key = [path, ...matches.map(m => m.route.id)].join(\"-\");\n  try {\n    let pending = pendingRouteChildren.get(key);\n    if (!pending) {\n      pending = patchRoutesOnNavigationImpl({\n        path,\n        matches,\n        patch: (routeId, children) => {\n          if (!signal.aborted) {\n            patchRoutesImpl(routeId, children, routes, manifest, mapRouteProperties);\n          }\n        }\n      });\n      pendingRouteChildren.set(key, pending);\n    }\n    if (pending && isPromise(pending)) {\n      await pending;\n    }\n  } finally {\n    pendingRouteChildren.delete(key);\n  }\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\n  if (routeId) {\n    var _route$children;\n    let route = manifest[routeId];\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\n    let dataChildren = convertRoutesToDataRoutes(children, mapRouteProperties, [routeId, \"patch\", String(((_route$children = route.children) == null ? void 0 : _route$children.length) || \"0\")], manifest);\n    if (route.children) {\n      route.children.push(...dataChildren);\n    } else {\n      route.children = dataChildren;\n    }\n  } else {\n    let dataChildren = convertRoutesToDataRoutes(children, mapRouteProperties, [\"patch\", String(routesToUse.length || \"0\")], manifest);\n    routesToUse.push(...dataChildren);\n  }\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nfunction defaultDataStrategy(opts) {\n  return Promise.all(opts.matches.map(m => m.resolve()));\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, request, matchesToLoad, matches, manifest, mapRouteProperties, requestContext) {\n  let routeIdsToLoad = matchesToLoad.reduce((acc, m) => acc.add(m.route.id), new Set());\n  let loadedMatches = new Set();\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: matches.map(match => {\n      let shouldLoad = routeIdsToLoad.has(match.route.id);\n      // `resolve` encapsulates the route.lazy, executing the\n      // loader/action, and mapping return values/thrown errors to a\n      // HandlerResult.  Users can pass a callback to take fine-grained control\n      // over the execution of the loader/action\n      let resolve = handlerOverride => {\n        loadedMatches.add(match.route.id);\n        return shouldLoad ? callLoaderOrAction(type, request, match, manifest, mapRouteProperties, handlerOverride, requestContext) : Promise.resolve({\n          type: ResultType.data,\n          result: undefined\n        });\n      };\n      return _extends({}, match, {\n        shouldLoad,\n        resolve\n      });\n    }),\n    request,\n    params: matches[0].params,\n    context: requestContext\n  });\n  // Throw if any loadRoute implementations not called since they are what\n  // ensures a route is fully loaded\n  matches.forEach(m => invariant(loadedMatches.has(m.route.id), \"`match.resolve()` was not called for route id \\\"\" + m.route.id + \"\\\". \" + \"You must call `match.resolve()` on every match passed to \" + \"`dataStrategy` to ensure all routes are properly loaded.\"));\n  // Filter out any middleware-only matches for which we didn't need to run handlers\n  return results.filter((_, i) => routeIdsToLoad.has(matches[i].route.id));\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, manifest, mapRouteProperties, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<HandlerResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise;\n    if (handlerOverride) {\n      handlerPromise = handlerOverride(ctx => actualHandler(ctx));\n    } else {\n      handlerPromise = (async () => {\n        try {\n          let val = await actualHandler();\n          return {\n            type: \"data\",\n            result: val\n          };\n        } catch (e) {\n          return {\n            type: \"error\",\n            result: e\n          };\n        }\n      })();\n    }\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // HandlerResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertHandlerResultToDataResult(handlerResult) {\n  let {\n    result,\n    type\n  } = handlerResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      var _result$init2;\n      if (result.data instanceof Error) {\n        var _result$init;\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status\n        };\n      }\n      // Convert thrown unstable_data() to ErrorResponse instances\n      result = new ErrorResponseImpl(((_result$init2 = result.init) == null ? void 0 : _result$init2.status) || 500, undefined, result.data);\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init3, _result$init4;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init3 = result.init) == null ? void 0 : _result$init3.status,\n      headers: ((_result$init4 = result.init) == null ? void 0 : _result$init4.headers) && new Headers(result.init.headers)\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    var _result$init5, _result$init6;\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: (_result$init5 = result.init) == null ? void 0 : _result$init5.status,\n      headers: (_result$init6 = result.init) != null && _result$init6.headers ? new Headers(result.init.headers) : undefined\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match,\n      controller\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index];\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (type === \"route-discovery\") {\n      errorMessage = \"Unable to match URL \\\"\" + pathname + \"\\\" - the `unstable_patchRoutesOnNavigation()` \" + (\"function threw the following error:\\n\" + message);\n    } else if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return {\n        result,\n        idx: i\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isPromise(val) {\n  return typeof val === \"object\" && val != null && \"then\" in val;\n}\nfunction isHandlerResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectHandlerResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(signal, \"Expected an AbortSignal for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, decodePath as UNSAFE_decodePath, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDataWithResponseInit, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, replace, resolvePath, resolveTo, stripBasename, data as unstable_data };\n//# sourceMappingURL=router.js.map\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import { BreadcrumbConfigType } from '@/typings/bread';\nimport { PageRouterType } from '@/typings/navigation';\nimport isEqual from 'lodash/isEqual';\nimport { matchRoutes } from 'react-router-dom';\n\n// 存储的key值\nexport const getRouterStoreName = (name: string) => {\n  let user = window.localStorage.getItem('user');\n\n  if (user) {\n    try {\n      user = JSON.parse(user);\n    } catch (error) {\n      console.log('用户信息解析失败：', error);\n    }\n  }\n\n  return user ? `${name}` : name;\n};\n\n// 存储路由栈\nexport const setRouterStack = (data: string[], name?: string) => {\n  const n = name || getRouterStoreName('routerStack');\n  window.localStorage.setItem(n, JSON.stringify(data));\n};\n\n// 获取路由栈\nexport const getRouterStack = (name?: string): any => {\n  const n = name || getRouterStoreName('routerStack');\n  let data = window.localStorage.getItem(n);\n\n  if (data) {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      console.log('路由堆栈解析失败', data);\n    }\n  }\n\n  return data || [];\n};\n\n// 存储路由表\nexport const setRouterMap = (data: Record<string, { pathname: string; params: string }>, name?: string) => {\n  const n = name || getRouterStoreName('routerMap');\n  window.localStorage.setItem(n, JSON.stringify(data));\n};\n\n// 获取路由表\nexport const getRouterMap = (name?: string): any => {\n  const n = name || getRouterStoreName('routerMap');\n  let data = window.localStorage.getItem(n);\n\n  if (data) {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      console.log('路由对象解析失败', data);\n    }\n  }\n\n  return data;\n};\n\n// 获取路由信息\nexport const getDetail = (routes: PageRouterType[], pathname: string, path: string) => {\n  const paths = matchRoutes(routes, path);\n  const m: any = paths ? paths[paths.length - 1]?.route : undefined;\n\n  if (!m) return false;\n\n  const map = getRouterMap();\n  const same = pathname === m.path;\n  const routerParams = map?.[m?.path as string] || '';\n  // TODO 后续需要支持 url 额外参数\n  const href = (same ? undefined : routerParams.params ? path + routerParams?.params : routerParams.pathname)?.replace(\n    'undefined',\n    '',\n  );\n\n  return {\n    title: <div className=\"flex justify-start items-center\">{m?.options?.title}</div>,\n    href,\n    value: m.path,\n    className: same ? 'active' : '',\n  };\n};\n\nconst getRouterMatch = (baseArr: string[], routerArr: string[]) => {\n  const baseEnd = baseArr.length - 1;\n  const routerEnd = routerArr.length;\n  // 面包屑数组的最后一项与路由栈第一项对比，如果不相等表示完全不匹配\n  if (baseArr[baseEnd] !== routerArr[0]) {\n    return false;\n  }\n\n  // 面包屑下标\n  let i = baseEnd;\n  // 路由栈下标\n  let j = 0;\n  // 下标数组\n  const indexArr: number[] = [];\n\n  // TODO: 临时解决方案，限制搜索次数\n  let countSearch = 0;\n\n  while (i > 0 || j < routerEnd) {\n    const base = baseArr[i];\n    const route = routerArr[j];\n\n    countSearch++;\n    // 超出 100 次检索时，中断检索\n    if (countSearch >= 100) {\n      break;\n    }\n\n    if (base === route) {\n      indexArr.push(j);\n\n      i--;\n      j++;\n      if (i < 0 || j > routerEnd) {\n        break;\n      }\n    } else {\n      j++;\n    }\n  }\n  return indexArr;\n};\n\nconst compareIndex = (old: number[], current: number[]) => {\n  let bigger = false;\n  for (let i = old.length - 1; i >= 0; i--) {\n    if (old[i] === current[i]) {\n      continue;\n    }\n    if (old[i] > current[i]) {\n      bigger = false;\n      break;\n    }\n    if (old[i] < current[i]) {\n      bigger = true;\n      break;\n    }\n  }\n\n  return bigger;\n};\n\n// 获取面包屑\nexport const getBreadItems = (\n  stack: string[],\n  breadMap: Record<string, Record<string, string[]>>,\n  pathname: string,\n  routes: PageRouterType[],\n) => {\n  if (!breadMap[pathname]) {\n    return [getDetail(routes, pathname, pathname)];\n  }\n\n  const matchStack = [];\n  for (const iterator of stack) {\n    if (iterator) {\n      const items = matchRoutes(routes, iterator);\n      const path = items ? items[items.length - 1]?.route.path : undefined;\n\n      path && matchStack.push(path);\n    }\n  }\n  const reverseMatchStack = matchStack.slice().reverse();\n  const reverseStack = stack.slice().reverse();\n\n  const arr = Object.values(breadMap[pathname] || {}) || [];\n\n  let items: any[] = [];\n  let indexArr: number[] = [];\n  let list: string[] = [];\n\n  for (const iterator of arr) {\n    const len = iterator.length;\n    const data = matchStack.slice(-len);\n    if (isEqual(data, iterator)) {\n      const data = stack.slice(-len);\n      items = data.map((v: string) => getDetail(routes, pathname, v)).filter(Boolean);\n      break;\n    }\n    const iA = getRouterMatch(iterator, reverseMatchStack as string[]) as number[];\n    if (Array.isArray(iA) && iA.length === len && !compareIndex(indexArr, iA)) {\n      indexArr = iA;\n      list = iA.map((v) => reverseStack[v]).reverse();\n    }\n  }\n  if (!items.length) {\n    items = list.map((v: string) => getDetail(routes, pathname, v)).filter(Boolean);\n  }\n\n  return items;\n};\n\nexport const getBreadMap = (breadConfig: BreadcrumbConfigType[]) => {\n  const map: Record<string, Record<string, string[]>> = {};\n\n  const setMap = (\n    list: BreadcrumbConfigType[],\n    obj: Record<string, Record<string, string[]>>,\n    keys?: string[],\n    name?: string, // 父级路由\n    root?: string, // 根路由名称\n  ) => {\n    for (const iterator of list) {\n      const data = keys ? keys.concat(iterator.route) : [iterator.route];\n\n      if (iterator.children) {\n        let rootName = undefined;\n        if (name) {\n          // 存在相同的路径时，容错处理. 是基于map对象下的键是不会被使用的前提下\n          const nN = obj[iterator.route]?.[name] ? `${root}-${name}` : name;\n\n          obj[iterator.route] = {\n            ...(obj[iterator.route] || {}),\n            [nN]: data,\n            [root as string]: data,\n          };\n        } else {\n          obj[iterator.route] = { [iterator.route]: data };\n          rootName = iterator.route;\n        }\n\n        setMap(iterator.children, obj, data, iterator.route, root || rootName);\n      } else {\n        if (root) {\n          obj[iterator.route] = { ...(obj[iterator.route] || {}), [root]: data };\n        }\n        if (name) {\n          const nN = obj[iterator.route]?.[name] ? `${root}-${name}` : name;\n\n          obj[iterator.route] = { ...(obj[iterator.route] || {}), [nN]: data };\n        }\n      }\n    }\n  };\n\n  setMap(breadConfig, map);\n\n  return map;\n};\n","import oe, { useState as b, useRef as O, useEffect as w, useLayoutEffect as N, useCallback as Re, useMemo as De } from \"react\";\nimport { unstable_batchedUpdates as ie } from \"react-dom\";\nvar G = typeof globalThis < \"u\" ? globalThis : typeof window < \"u\" ? window : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {};\nfunction Ye(e) {\n  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, \"default\") ? e.default : e;\n}\nfunction Ze() {\n  this.__data__ = [], this.size = 0;\n}\nvar Qe = Ze;\nfunction ke(e, t) {\n  return e === t || e !== e && t !== t;\n}\nvar Me = ke, et = Me;\nfunction tt(e, t) {\n  for (var r = e.length; r--; )\n    if (et(e[r][0], t))\n      return r;\n  return -1;\n}\nvar U = tt, rt = U, at = Array.prototype, nt = at.splice;\nfunction st(e) {\n  var t = this.__data__, r = rt(t, e);\n  if (r < 0)\n    return !1;\n  var n = t.length - 1;\n  return r == n ? t.pop() : nt.call(t, r, 1), --this.size, !0;\n}\nvar ot = st, it = U;\nfunction ct(e) {\n  var t = this.__data__, r = it(t, e);\n  return r < 0 ? void 0 : t[r][1];\n}\nvar ut = ct, lt = U;\nfunction ft(e) {\n  return lt(this.__data__, e) > -1;\n}\nvar pt = ft, vt = U;\nfunction dt(e, t) {\n  var r = this.__data__, n = vt(r, e);\n  return n < 0 ? (++this.size, r.push([e, t])) : r[n][1] = t, this;\n}\nvar gt = dt, ht = Qe, _t = ot, yt = ut, bt = pt, $t = gt;\nfunction P(e) {\n  var t = -1, r = e == null ? 0 : e.length;\n  for (this.clear(); ++t < r; ) {\n    var n = e[t];\n    this.set(n[0], n[1]);\n  }\n}\nP.prototype.clear = ht;\nP.prototype.delete = _t;\nP.prototype.get = yt;\nP.prototype.has = bt;\nP.prototype.set = $t;\nvar B = P, St = B;\nfunction Tt() {\n  this.__data__ = new St(), this.size = 0;\n}\nvar wt = Tt;\nfunction At(e) {\n  var t = this.__data__, r = t.delete(e);\n  return this.size = t.size, r;\n}\nvar mt = At;\nfunction Ct(e) {\n  return this.__data__.get(e);\n}\nvar Et = Ct;\nfunction Ot(e) {\n  return this.__data__.has(e);\n}\nvar jt = Ot, Pt = typeof G == \"object\" && G && G.Object === Object && G, Ge = Pt, Lt = Ge, xt = typeof self == \"object\" && self && self.Object === Object && self, It = Lt || xt || Function(\"return this\")(), A = It, Rt = A, Dt = Rt.Symbol, ae = Dt, ce = ae, He = Object.prototype, Mt = He.hasOwnProperty, Gt = He.toString, M = ce ? ce.toStringTag : void 0;\nfunction Ht(e) {\n  var t = Mt.call(e, M), r = e[M];\n  try {\n    e[M] = void 0;\n    var n = !0;\n  } catch {\n  }\n  var s = Gt.call(e);\n  return n && (t ? e[M] = r : delete e[M]), s;\n}\nvar qt = Ht, zt = Object.prototype, Ft = zt.toString;\nfunction Nt(e) {\n  return Ft.call(e);\n}\nvar Ut = Nt, ue = ae, Bt = qt, Kt = Ut, Wt = \"[object Null]\", Vt = \"[object Undefined]\", le = ue ? ue.toStringTag : void 0;\nfunction Jt(e) {\n  return e == null ? e === void 0 ? Vt : Wt : le && le in Object(e) ? Bt(e) : Kt(e);\n}\nvar K = Jt;\nfunction Xt(e) {\n  var t = typeof e;\n  return e != null && (t == \"object\" || t == \"function\");\n}\nvar qe = Xt, Yt = K, Zt = qe, Qt = \"[object AsyncFunction]\", kt = \"[object Function]\", er = \"[object GeneratorFunction]\", tr = \"[object Proxy]\";\nfunction rr(e) {\n  if (!Zt(e))\n    return !1;\n  var t = Yt(e);\n  return t == kt || t == er || t == Qt || t == tr;\n}\nvar ze = rr, ar = A, nr = ar[\"__core-js_shared__\"], sr = nr, X = sr, fe = function() {\n  var e = /[^.]+$/.exec(X && X.keys && X.keys.IE_PROTO || \"\");\n  return e ? \"Symbol(src)_1.\" + e : \"\";\n}();\nfunction or(e) {\n  return !!fe && fe in e;\n}\nvar ir = or, cr = Function.prototype, ur = cr.toString;\nfunction lr(e) {\n  if (e != null) {\n    try {\n      return ur.call(e);\n    } catch {\n    }\n    try {\n      return e + \"\";\n    } catch {\n    }\n  }\n  return \"\";\n}\nvar Fe = lr, fr = ze, pr = ir, vr = qe, dr = Fe, gr = /[\\\\^$.*+?()[\\]{}|]/g, hr = /^\\[object .+?Constructor\\]$/, _r = Function.prototype, yr = Object.prototype, br = _r.toString, $r = yr.hasOwnProperty, Sr = RegExp(\n  \"^\" + br.call($r).replace(gr, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\"\n);\nfunction Tr(e) {\n  if (!vr(e) || pr(e))\n    return !1;\n  var t = fr(e) ? Sr : hr;\n  return t.test(dr(e));\n}\nvar wr = Tr;\nfunction Ar(e, t) {\n  return e == null ? void 0 : e[t];\n}\nvar mr = Ar, Cr = wr, Er = mr;\nfunction Or(e, t) {\n  var r = Er(e, t);\n  return Cr(r) ? r : void 0;\n}\nvar L = Or, jr = L, Pr = A, Lr = jr(Pr, \"Map\"), ne = Lr, xr = L, Ir = xr(Object, \"create\"), W = Ir, pe = W;\nfunction Rr() {\n  this.__data__ = pe ? pe(null) : {}, this.size = 0;\n}\nvar Dr = Rr;\nfunction Mr(e) {\n  var t = this.has(e) && delete this.__data__[e];\n  return this.size -= t ? 1 : 0, t;\n}\nvar Gr = Mr, Hr = W, qr = \"__lodash_hash_undefined__\", zr = Object.prototype, Fr = zr.hasOwnProperty;\nfunction Nr(e) {\n  var t = this.__data__;\n  if (Hr) {\n    var r = t[e];\n    return r === qr ? void 0 : r;\n  }\n  return Fr.call(t, e) ? t[e] : void 0;\n}\nvar Ur = Nr, Br = W, Kr = Object.prototype, Wr = Kr.hasOwnProperty;\nfunction Vr(e) {\n  var t = this.__data__;\n  return Br ? t[e] !== void 0 : Wr.call(t, e);\n}\nvar Jr = Vr, Xr = W, Yr = \"__lodash_hash_undefined__\";\nfunction Zr(e, t) {\n  var r = this.__data__;\n  return this.size += this.has(e) ? 0 : 1, r[e] = Xr && t === void 0 ? Yr : t, this;\n}\nvar Qr = Zr, kr = Dr, ea = Gr, ta = Ur, ra = Jr, aa = Qr;\nfunction x(e) {\n  var t = -1, r = e == null ? 0 : e.length;\n  for (this.clear(); ++t < r; ) {\n    var n = e[t];\n    this.set(n[0], n[1]);\n  }\n}\nx.prototype.clear = kr;\nx.prototype.delete = ea;\nx.prototype.get = ta;\nx.prototype.has = ra;\nx.prototype.set = aa;\nvar na = x, ve = na, sa = B, oa = ne;\nfunction ia() {\n  this.size = 0, this.__data__ = {\n    hash: new ve(),\n    map: new (oa || sa)(),\n    string: new ve()\n  };\n}\nvar ca = ia;\nfunction ua(e) {\n  var t = typeof e;\n  return t == \"string\" || t == \"number\" || t == \"symbol\" || t == \"boolean\" ? e !== \"__proto__\" : e === null;\n}\nvar la = ua, fa = la;\nfunction pa(e, t) {\n  var r = e.__data__;\n  return fa(t) ? r[typeof t == \"string\" ? \"string\" : \"hash\"] : r.map;\n}\nvar V = pa, va = V;\nfunction da(e) {\n  var t = va(this, e).delete(e);\n  return this.size -= t ? 1 : 0, t;\n}\nvar ga = da, ha = V;\nfunction _a(e) {\n  return ha(this, e).get(e);\n}\nvar ya = _a, ba = V;\nfunction $a(e) {\n  return ba(this, e).has(e);\n}\nvar Sa = $a, Ta = V;\nfunction wa(e, t) {\n  var r = Ta(this, e), n = r.size;\n  return r.set(e, t), this.size += r.size == n ? 0 : 1, this;\n}\nvar Aa = wa, ma = ca, Ca = ga, Ea = ya, Oa = Sa, ja = Aa;\nfunction I(e) {\n  var t = -1, r = e == null ? 0 : e.length;\n  for (this.clear(); ++t < r; ) {\n    var n = e[t];\n    this.set(n[0], n[1]);\n  }\n}\nI.prototype.clear = ma;\nI.prototype.delete = Ca;\nI.prototype.get = Ea;\nI.prototype.has = Oa;\nI.prototype.set = ja;\nvar Ne = I, Pa = B, La = ne, xa = Ne, Ia = 200;\nfunction Ra(e, t) {\n  var r = this.__data__;\n  if (r instanceof Pa) {\n    var n = r.__data__;\n    if (!La || n.length < Ia - 1)\n      return n.push([e, t]), this.size = ++r.size, this;\n    r = this.__data__ = new xa(n);\n  }\n  return r.set(e, t), this.size = r.size, this;\n}\nvar Da = Ra, Ma = B, Ga = wt, Ha = mt, qa = Et, za = jt, Fa = Da;\nfunction R(e) {\n  var t = this.__data__ = new Ma(e);\n  this.size = t.size;\n}\nR.prototype.clear = Ga;\nR.prototype.delete = Ha;\nR.prototype.get = qa;\nR.prototype.has = za;\nR.prototype.set = Fa;\nvar Na = R, Ua = \"__lodash_hash_undefined__\";\nfunction Ba(e) {\n  return this.__data__.set(e, Ua), this;\n}\nvar Ka = Ba;\nfunction Wa(e) {\n  return this.__data__.has(e);\n}\nvar Va = Wa, Ja = Ne, Xa = Ka, Ya = Va;\nfunction q(e) {\n  var t = -1, r = e == null ? 0 : e.length;\n  for (this.__data__ = new Ja(); ++t < r; )\n    this.add(e[t]);\n}\nq.prototype.add = q.prototype.push = Xa;\nq.prototype.has = Ya;\nvar Za = q;\nfunction Qa(e, t) {\n  for (var r = -1, n = e == null ? 0 : e.length; ++r < n; )\n    if (t(e[r], r, e))\n      return !0;\n  return !1;\n}\nvar ka = Qa;\nfunction en(e, t) {\n  return e.has(t);\n}\nvar tn = en, rn = Za, an = ka, nn = tn, sn = 1, on = 2;\nfunction cn(e, t, r, n, s, a) {\n  var o = r & sn, i = e.length, c = t.length;\n  if (i != c && !(o && c > i))\n    return !1;\n  var u = a.get(e), v = a.get(t);\n  if (u && v)\n    return u == t && v == e;\n  var g = -1, p = !0, h = r & on ? new rn() : void 0;\n  for (a.set(e, t), a.set(t, e); ++g < i; ) {\n    var d = e[g], l = t[g];\n    if (n)\n      var _ = o ? n(l, d, g, t, e, a) : n(d, l, g, e, t, a);\n    if (_ !== void 0) {\n      if (_)\n        continue;\n      p = !1;\n      break;\n    }\n    if (h) {\n      if (!an(t, function($, S) {\n        if (!nn(h, S) && (d === $ || s(d, $, r, n, a)))\n          return h.push(S);\n      })) {\n        p = !1;\n        break;\n      }\n    } else if (!(d === l || s(d, l, r, n, a))) {\n      p = !1;\n      break;\n    }\n  }\n  return a.delete(e), a.delete(t), p;\n}\nvar Ue = cn, un = A, ln = un.Uint8Array, fn = ln;\nfunction pn(e) {\n  var t = -1, r = Array(e.size);\n  return e.forEach(function(n, s) {\n    r[++t] = [s, n];\n  }), r;\n}\nvar vn = pn;\nfunction dn(e) {\n  var t = -1, r = Array(e.size);\n  return e.forEach(function(n) {\n    r[++t] = n;\n  }), r;\n}\nvar gn = dn, de = ae, ge = fn, hn = Me, _n = Ue, yn = vn, bn = gn, $n = 1, Sn = 2, Tn = \"[object Boolean]\", wn = \"[object Date]\", An = \"[object Error]\", mn = \"[object Map]\", Cn = \"[object Number]\", En = \"[object RegExp]\", On = \"[object Set]\", jn = \"[object String]\", Pn = \"[object Symbol]\", Ln = \"[object ArrayBuffer]\", xn = \"[object DataView]\", he = de ? de.prototype : void 0, Y = he ? he.valueOf : void 0;\nfunction In(e, t, r, n, s, a, o) {\n  switch (r) {\n    case xn:\n      if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset)\n        return !1;\n      e = e.buffer, t = t.buffer;\n    case Ln:\n      return !(e.byteLength != t.byteLength || !a(new ge(e), new ge(t)));\n    case Tn:\n    case wn:\n    case Cn:\n      return hn(+e, +t);\n    case An:\n      return e.name == t.name && e.message == t.message;\n    case En:\n    case jn:\n      return e == t + \"\";\n    case mn:\n      var i = yn;\n    case On:\n      var c = n & $n;\n      if (i || (i = bn), e.size != t.size && !c)\n        return !1;\n      var u = o.get(e);\n      if (u)\n        return u == t;\n      n |= Sn, o.set(e, t);\n      var v = _n(i(e), i(t), n, s, a, o);\n      return o.delete(e), v;\n    case Pn:\n      if (Y)\n        return Y.call(e) == Y.call(t);\n  }\n  return !1;\n}\nvar Rn = In;\nfunction Dn(e, t) {\n  for (var r = -1, n = t.length, s = e.length; ++r < n; )\n    e[s + r] = t[r];\n  return e;\n}\nvar Mn = Dn, Gn = Array.isArray, se = Gn, Hn = Mn, qn = se;\nfunction zn(e, t, r) {\n  var n = t(e);\n  return qn(e) ? n : Hn(n, r(e));\n}\nvar Fn = zn;\nfunction Nn(e, t) {\n  for (var r = -1, n = e == null ? 0 : e.length, s = 0, a = []; ++r < n; ) {\n    var o = e[r];\n    t(o, r, e) && (a[s++] = o);\n  }\n  return a;\n}\nvar Un = Nn;\nfunction Bn() {\n  return [];\n}\nvar Kn = Bn, Wn = Un, Vn = Kn, Jn = Object.prototype, Xn = Jn.propertyIsEnumerable, _e = Object.getOwnPropertySymbols, Yn = _e ? function(e) {\n  return e == null ? [] : (e = Object(e), Wn(_e(e), function(t) {\n    return Xn.call(e, t);\n  }));\n} : Vn, Zn = Yn;\nfunction Qn(e, t) {\n  for (var r = -1, n = Array(e); ++r < e; )\n    n[r] = t(r);\n  return n;\n}\nvar kn = Qn;\nfunction es(e) {\n  return e != null && typeof e == \"object\";\n}\nvar J = es, ts = K, rs = J, as = \"[object Arguments]\";\nfunction ns(e) {\n  return rs(e) && ts(e) == as;\n}\nvar ss = ns, ye = ss, os = J, Be = Object.prototype, is = Be.hasOwnProperty, cs = Be.propertyIsEnumerable, us = ye(function() {\n  return arguments;\n}()) ? ye : function(e) {\n  return os(e) && is.call(e, \"callee\") && !cs.call(e, \"callee\");\n}, ls = us, z = { exports: {} };\nfunction fs() {\n  return !1;\n}\nvar ps = fs;\nz.exports;\n(function(e, t) {\n  var r = A, n = ps, s = t && !t.nodeType && t, a = s && !0 && e && !e.nodeType && e, o = a && a.exports === s, i = o ? r.Buffer : void 0, c = i ? i.isBuffer : void 0, u = c || n;\n  e.exports = u;\n})(z, z.exports);\nvar Ke = z.exports, vs = 9007199254740991, ds = /^(?:0|[1-9]\\d*)$/;\nfunction gs(e, t) {\n  var r = typeof e;\n  return t = t ?? vs, !!t && (r == \"number\" || r != \"symbol\" && ds.test(e)) && e > -1 && e % 1 == 0 && e < t;\n}\nvar hs = gs, _s = 9007199254740991;\nfunction ys(e) {\n  return typeof e == \"number\" && e > -1 && e % 1 == 0 && e <= _s;\n}\nvar We = ys, bs = K, $s = We, Ss = J, Ts = \"[object Arguments]\", ws = \"[object Array]\", As = \"[object Boolean]\", ms = \"[object Date]\", Cs = \"[object Error]\", Es = \"[object Function]\", Os = \"[object Map]\", js = \"[object Number]\", Ps = \"[object Object]\", Ls = \"[object RegExp]\", xs = \"[object Set]\", Is = \"[object String]\", Rs = \"[object WeakMap]\", Ds = \"[object ArrayBuffer]\", Ms = \"[object DataView]\", Gs = \"[object Float32Array]\", Hs = \"[object Float64Array]\", qs = \"[object Int8Array]\", zs = \"[object Int16Array]\", Fs = \"[object Int32Array]\", Ns = \"[object Uint8Array]\", Us = \"[object Uint8ClampedArray]\", Bs = \"[object Uint16Array]\", Ks = \"[object Uint32Array]\", f = {};\nf[Gs] = f[Hs] = f[qs] = f[zs] = f[Fs] = f[Ns] = f[Us] = f[Bs] = f[Ks] = !0;\nf[Ts] = f[ws] = f[Ds] = f[As] = f[Ms] = f[ms] = f[Cs] = f[Es] = f[Os] = f[js] = f[Ps] = f[Ls] = f[xs] = f[Is] = f[Rs] = !1;\nfunction Ws(e) {\n  return Ss(e) && $s(e.length) && !!f[bs(e)];\n}\nvar Vs = Ws;\nfunction Js(e) {\n  return function(t) {\n    return e(t);\n  };\n}\nvar Xs = Js, F = { exports: {} };\nF.exports;\n(function(e, t) {\n  var r = Ge, n = t && !t.nodeType && t, s = n && !0 && e && !e.nodeType && e, a = s && s.exports === n, o = a && r.process, i = function() {\n    try {\n      var c = s && s.require && s.require(\"util\").types;\n      return c || o && o.binding && o.binding(\"util\");\n    } catch {\n    }\n  }();\n  e.exports = i;\n})(F, F.exports);\nvar Ys = F.exports, Zs = Vs, Qs = Xs, be = Ys, $e = be && be.isTypedArray, ks = $e ? Qs($e) : Zs, Ve = ks, eo = kn, to = ls, ro = se, ao = Ke, no = hs, so = Ve, oo = Object.prototype, io = oo.hasOwnProperty;\nfunction co(e, t) {\n  var r = ro(e), n = !r && to(e), s = !r && !n && ao(e), a = !r && !n && !s && so(e), o = r || n || s || a, i = o ? eo(e.length, String) : [], c = i.length;\n  for (var u in e)\n    (t || io.call(e, u)) && !(o && // Safari 9 has enumerable `arguments.length` in strict mode.\n    (u == \"length\" || // Node.js 0.10 has enumerable non-index properties on buffers.\n    s && (u == \"offset\" || u == \"parent\") || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    a && (u == \"buffer\" || u == \"byteLength\" || u == \"byteOffset\") || // Skip index properties.\n    no(u, c))) && i.push(u);\n  return i;\n}\nvar uo = co, lo = Object.prototype;\nfunction fo(e) {\n  var t = e && e.constructor, r = typeof t == \"function\" && t.prototype || lo;\n  return e === r;\n}\nvar po = fo;\nfunction vo(e, t) {\n  return function(r) {\n    return e(t(r));\n  };\n}\nvar go = vo, ho = go, _o = ho(Object.keys, Object), yo = _o, bo = po, $o = yo, So = Object.prototype, To = So.hasOwnProperty;\nfunction wo(e) {\n  if (!bo(e))\n    return $o(e);\n  var t = [];\n  for (var r in Object(e))\n    To.call(e, r) && r != \"constructor\" && t.push(r);\n  return t;\n}\nvar Ao = wo, mo = ze, Co = We;\nfunction Eo(e) {\n  return e != null && Co(e.length) && !mo(e);\n}\nvar Oo = Eo, jo = uo, Po = Ao, Lo = Oo;\nfunction xo(e) {\n  return Lo(e) ? jo(e) : Po(e);\n}\nvar Io = xo, Ro = Fn, Do = Zn, Mo = Io;\nfunction Go(e) {\n  return Ro(e, Mo, Do);\n}\nvar Ho = Go, Se = Ho, qo = 1, zo = Object.prototype, Fo = zo.hasOwnProperty;\nfunction No(e, t, r, n, s, a) {\n  var o = r & qo, i = Se(e), c = i.length, u = Se(t), v = u.length;\n  if (c != v && !o)\n    return !1;\n  for (var g = c; g--; ) {\n    var p = i[g];\n    if (!(o ? p in t : Fo.call(t, p)))\n      return !1;\n  }\n  var h = a.get(e), d = a.get(t);\n  if (h && d)\n    return h == t && d == e;\n  var l = !0;\n  a.set(e, t), a.set(t, e);\n  for (var _ = o; ++g < c; ) {\n    p = i[g];\n    var $ = e[p], S = t[p];\n    if (n)\n      var y = o ? n(S, $, p, t, e, a) : n($, S, p, e, t, a);\n    if (!(y === void 0 ? $ === S || s($, S, r, n, a) : y)) {\n      l = !1;\n      break;\n    }\n    _ || (_ = p == \"constructor\");\n  }\n  if (l && !_) {\n    var m = e.constructor, j = t.constructor;\n    m != j && \"constructor\" in e && \"constructor\" in t && !(typeof m == \"function\" && m instanceof m && typeof j == \"function\" && j instanceof j) && (l = !1);\n  }\n  return a.delete(e), a.delete(t), l;\n}\nvar Uo = No, Bo = L, Ko = A, Wo = Bo(Ko, \"DataView\"), Vo = Wo, Jo = L, Xo = A, Yo = Jo(Xo, \"Promise\"), Zo = Yo, Qo = L, ko = A, ei = Qo(ko, \"Set\"), ti = ei, ri = L, ai = A, ni = ri(ai, \"WeakMap\"), si = ni, Q = Vo, k = ne, ee = Zo, te = ti, re = si, Je = K, D = Fe, Te = \"[object Map]\", oi = \"[object Object]\", we = \"[object Promise]\", Ae = \"[object Set]\", me = \"[object WeakMap]\", Ce = \"[object DataView]\", ii = D(Q), ci = D(k), ui = D(ee), li = D(te), fi = D(re), E = Je;\n(Q && E(new Q(new ArrayBuffer(1))) != Ce || k && E(new k()) != Te || ee && E(ee.resolve()) != we || te && E(new te()) != Ae || re && E(new re()) != me) && (E = function(e) {\n  var t = Je(e), r = t == oi ? e.constructor : void 0, n = r ? D(r) : \"\";\n  if (n)\n    switch (n) {\n      case ii:\n        return Ce;\n      case ci:\n        return Te;\n      case ui:\n        return we;\n      case li:\n        return Ae;\n      case fi:\n        return me;\n    }\n  return t;\n});\nvar pi = E, Z = Na, vi = Ue, di = Rn, gi = Uo, Ee = pi, Oe = se, je = Ke, hi = Ve, _i = 1, Pe = \"[object Arguments]\", Le = \"[object Array]\", H = \"[object Object]\", yi = Object.prototype, xe = yi.hasOwnProperty;\nfunction bi(e, t, r, n, s, a) {\n  var o = Oe(e), i = Oe(t), c = o ? Le : Ee(e), u = i ? Le : Ee(t);\n  c = c == Pe ? H : c, u = u == Pe ? H : u;\n  var v = c == H, g = u == H, p = c == u;\n  if (p && je(e)) {\n    if (!je(t))\n      return !1;\n    o = !0, v = !1;\n  }\n  if (p && !v)\n    return a || (a = new Z()), o || hi(e) ? vi(e, t, r, n, s, a) : di(e, t, c, r, n, s, a);\n  if (!(r & _i)) {\n    var h = v && xe.call(e, \"__wrapped__\"), d = g && xe.call(t, \"__wrapped__\");\n    if (h || d) {\n      var l = h ? e.value() : e, _ = d ? t.value() : t;\n      return a || (a = new Z()), s(l, _, r, n, a);\n    }\n  }\n  return p ? (a || (a = new Z()), gi(e, t, r, n, s, a)) : !1;\n}\nvar $i = bi, Si = $i, Ie = J;\nfunction Xe(e, t, r, n, s) {\n  return e === t ? !0 : e == null || t == null || !Ie(e) && !Ie(t) ? e !== e && t !== t : Si(e, t, r, n, Xe, s);\n}\nvar Ti = Xe, wi = Ti;\nfunction Ai(e, t) {\n  return wi(e, t);\n}\nvar mi = Ai;\nconst Ci = /* @__PURE__ */ Ye(mi), ji = (e, t) => {\n  const [r, n] = b(!1), s = O(!1), a = O(t);\n  w(() => {\n    if (!s.current)\n      s.current = !0;\n    else if (r)\n      return e();\n  }, [r]), w(() => {\n    const o = !Ci(a.current, t);\n    o && (a.current = t), n(o);\n  }, [t]), w(() => () => {\n    s.current = !1;\n  }, []);\n}, Pi = () => {\n  const e = O(null);\n  return { wrapper: e, isElementInViewport: () => {\n    if (!e.current)\n      return !1;\n    const r = e.current.getBoundingClientRect(), n = window.innerHeight || document.documentElement.clientHeight, s = window.innerWidth || document.documentElement.clientWidth;\n    return r.top < n && r.left < s && r.bottom > 0 && r.right > 0;\n  } };\n}, C = {}, Li = (e) => {\n  var n;\n  const [t, r] = b(((n = C.global) == null ? void 0 : n.state) || e);\n  return C.global || (C.global = {\n    state: t,\n    sets: []\n  }), N(() => {\n    C.global.sets.push(r);\n  }, []), [\n    t,\n    Re((s) => {\n      const a = typeof s == \"function\" ? s(C.global.state) : s;\n      C.global.state = a, r(a), C.global.sets.forEach((o) => o(a));\n    }, [])\n  ];\n}, T = {}, xi = (e) => {\n  var s;\n  const t = window.location.pathname, [r, n] = b(((s = T[t]) == null ? void 0 : s.state) || e);\n  return T[t] || (T[t] = {\n    state: r,\n    sets: []\n  }), N(() => {\n    T[t].sets.push(n);\n  }, [t]), w(() => {\n    Object.keys(T).forEach((a) => {\n      a && a !== t && Reflect.deleteProperty(T, a);\n    });\n  }, [t]), [\n    r,\n    Re(\n      (a) => {\n        const o = typeof a == \"function\" ? a(T[t].state) : a;\n        T[t].state = o, n(o), T[t].sets.forEach((i) => i(o));\n      },\n      [t]\n    )\n  ];\n}, Ii = () => {\n  const e = O(null), t = De(() => document.createElement(\"div\"), []);\n  N(() => {\n    const a = document.createElement(\"style\");\n    document.head.appendChild(a);\n    const o = (i, c, u) => {\n      \"insertRule\" in i ? i.insertRule(c, u) : \"addRule\" in i && i.addRule(selector, c, u);\n    };\n    o(\n      a.sheet,\n      `.utopian-scrollbar {\n        overflow: auto;\n        position: relative;\n      }\n      `,\n      0\n    ), o(\n      a.sheet,\n      `.utopian-scrollbar::-webkit-scrollbar {\n        width: 0;\n        height: 0;\n      }`,\n      0\n    ), o(\n      a.sheet,\n      `\n        .utopian-scrollbar .bar {\n          position: absolute;\n          bottom: 0;\n          left: 0;\n          width: 50px;\n          height: 4px;\n          background: #C9CDD4;\n          border-radius: 3px;\n          opacity: 0;\n          z-index: 50;\n          transition: opacity 0.3s;\n          pointer-events: none;\n        }\n      `,\n      0\n    ), o(\n      a.sheet,\n      `\n        .utopian-scrollbar .bar.show {\n          opacity: 1;\n        }\n      `,\n      0\n    );\n  }, []);\n  const r = () => {\n    const a = e.current, o = a.scrollLeft, i = a.scrollWidth, c = a.clientWidth, u = o / i * c, v = c / i * c;\n    t.style.width = `${v}px`, t.style.left = `${u + o}px`;\n  }, n = () => {\n    const a = e.current, o = a.scrollWidth;\n    a.clientWidth < o ? (r(), t.classList.add(\"show\")) : t.classList.remove(\"show\");\n  }, s = () => {\n    r(), t.classList.remove(\"show\");\n  };\n  return w(() => {\n    var a, o;\n    if (e.current)\n      return e.current.classList.add(\"utopian-scrollbar\"), t.classList.add(\"bar\"), (a = e.current) == null || a.appendChild(t), (o = e.current) == null || o.addEventListener(\"scroll\", r), e.current.addEventListener(\"mouseover\", n), e.current.addEventListener(\"mouseout\", s), () => {\n        var i, c, u, v;\n        (i = e.current) == null || i.removeEventListener(\"scroll\", r), (c = e.current) == null || c.removeEventListener(\"mouseover\", n), (u = e.current) == null || u.removeEventListener(\"mouseout\", s), t && ((v = e.current) == null || v.removeChild(t));\n      };\n  }, [e.current]), { wrapperRef: e, scrollRect: r, scrollVisible: n };\n}, Ri = () => {\n  const e = O(null), [t, r] = b(!1);\n  return w(() => {\n    if (!e.current)\n      return;\n    const n = () => {\n      e.current.scrollTop > 0 && !t ? r(!0) : r(!1);\n    };\n    return e.current.addEventListener(\"scroll\", n), () => {\n      !e.current || !n || e.current.removeEventListener(\"scroll\", n);\n    };\n  }, [e.current]), { scrollEleRef: e, scrolled: t };\n}, Di = (e, t) => {\n  const r = O(null), n = De(() => document.createElement(\"div\"), []);\n  function s(a, o, i, c) {\n    \"insertRule\" in a ? a.insertRule(`${o} { ${i} }`, c) : \"addRule\" in a && a.addRule(o, i, c);\n  }\n  return N(() => {\n    const a = document.createElement(\"style\");\n    document.head.appendChild(a), s(\n      a.sheet,\n      \".scroll-container::before\",\n      ` content: '';\n        position: absolute;\n        top: ${e || 0}px;\n        left: ${t || 0}px;\n        width: 100%;\n        height: 4px;\n        background: linear-gradient(180deg, rgba(0, 0, 0, 0.08) 0%, rgba(0, 0, 0, 0) 100%);\n        opacity: 0;\n        pointer-events: none;\n        transition: opacity 0.3s;`,\n      0\n    ), s(a.sheet, \".scroll-container.scrolled::before\", \" opacity: 1;\", 0);\n  }, [e, t]), w(() => {\n    r.current && (r.current.parentElement.classList.add(\"relative\"), r.current.classList.add(\"scroll-container\"), r.current.addEventListener(\"scroll\", () => {\n      r.current.scrollTop > 0 ? r.current.classList.add(\"scrolled\") : r.current.classList.remove(\"scrolled\");\n    }));\n  }, [r.current]), { wrapperRef: r, Wrapper: n };\n}, Mi = (e) => {\n  const {\n    requestParams: t,\n    request: r\n  } = e, [n, s] = b([]), [a, o] = b([]), [i, c] = b({\n    total: 0,\n    pageSize: 10,\n    current: 1\n  }), [u, v] = b([]), [g, p] = b(), {\n    loading: h,\n    sendRequest: d,\n    data: l\n  } = r({\n    url: t.url,\n    req: {\n      // 每次状态改变都会触发重新请求，但是 pageIndex 未归 0\n      // 又不存在改变了参数还留在本页的场景（可以在外层传递 pageIndex），故此处硬编码为 0\n      pageIndex: 1,\n      pageSize: i.pageSize,\n      ...t.req\n    }\n  });\n  w(() => {\n    ie(() => {\n      v((l == null ? void 0 : l.records) || []), c({\n        current: (l == null ? void 0 : l.pageIndex) || 1,\n        pageSize: (l == null ? void 0 : l.pageSize) || 10,\n        total: (l == null ? void 0 : l.total) || 0\n      }), p(l);\n    });\n  }, [l]);\n  const _ = {\n    selectedRowKeys: n,\n    onChange: (y, m) => {\n      ie(() => {\n        s(y), o(m);\n      });\n    }\n  }, $ = async (y) => {\n    const {\n      current: m,\n      pageSize: j\n    } = y;\n    d({\n      pageIndex: m || i.current,\n      pageSize: j || i.pageSize,\n      ...t.req\n    });\n  }, S = async (y) => {\n    d({\n      pageIndex: y || i.current,\n      pageSize: i.pageSize,\n      ...t.req\n    });\n  };\n  return {\n    tableProps: {\n      rowSelection: _,\n      pagination: {\n        ...i,\n        showTotal: (y) => `共${y}条`,\n        showSizeChanger: !0\n      },\n      loading: h,\n      dataSource: u,\n      onChange: $\n      // expandable: expanded ? expandableConfig : undefined,\n    },\n    selectedRows: a,\n    changePage: S,\n    sendRequest: d,\n    rawData: g\n  };\n}, Gi = () => {\n  const [e, t] = b({ transitionStart: !1, transitionEnd: !0 }), r = O(null);\n  return w(() => {\n    if (!r.current)\n      return;\n    const n = (a) => {\n      a.stopPropagation(), a.preventDefault(), a.target === r.current && t({ transitionStart: !0, transitionEnd: !1 });\n    }, s = (a) => {\n      a.stopPropagation(), a.preventDefault(), a.target === r.current && t({ transitionStart: !1, transitionEnd: !0 });\n    };\n    return r.current.addEventListener(\"transitionstart\", n), r.current.addEventListener(\"transitionend\", s), () => {\n      var a, o;\n      (a = r.current) == null || a.addEventListener(\"transitionstart\", n), (o = r.current) == null || o.removeEventListener(\"transitionend\", s);\n    };\n  }, [r.current]), { wrapperDiv: r, transitionend: e.transitionEnd, transitionstart: e.transitionStart };\n};\nfunction Hi(e = {}) {\n  const {\n    strict: t = !0,\n    errorMessage: r = \"useContext: `context` is undefined. Seems you forgot to wrap component within the Provider\",\n    name: n\n  } = e, s = oe.createContext(void 0);\n  s.displayName = n;\n  function a() {\n    const o = oe.useContext(s);\n    if (!o && t)\n      throw new Error(r);\n    return o;\n  }\n  return [s.Provider, a, s];\n}\nexport {\n  Hi as createContext,\n  T as routerStates,\n  ji as useDepEffect,\n  Pi as useElementInViewport,\n  Li as useGlobalState,\n  xi as useRouterState,\n  Ri as useScrollCheck,\n  Di as useScrollShadow,\n  Ii as useScrollbar,\n  Mi as useTableProvider,\n  Gi as useTransitionend\n};\n","import { LayoutType } from '@/typings/layout';\nimport { NavigationType, PageRouterType } from '@/typings/navigation';\nimport { createContext } from '@cyberutopian/hooks';\nimport { Dispatch, SetStateAction } from 'react';\n\nexport interface CyberLayoutContextType {\n  /** @param 主题色 */\n  theme: { color: string };\n  /** @param 项目路由 */\n  routes: PageRouterType[];\n}\nexport const [CyberLayoutProvider, useCyberLayoutContext, CyberLayoutContext] = createContext<CyberLayoutContextType>();\n\nexport interface LayoutContextType {\n  /** @param 展开菜单 */\n  isExpanded: boolean;\n  /** @param 更改展开 */\n  setIsExpanded: Dispatch<SetStateAction<boolean>>;\n  /** @param 主题色 */\n  theme: LayoutType['theme'];\n  /** @param 项目路由 */\n  routes: LayoutType['routes'];\n}\nexport const [LayoutProvider, useLayoutContext, LayoutContext] = createContext<LayoutContextType>();\n\nexport interface NavigationContextType {\n  /** @param 密码修改弹窗触发器 */\n  onItemClick?: NavigationType['onItemClick'];\n  /** @param 展开菜单 */\n  showNav: boolean;\n}\n\nexport const [NavigationProvider, useNavigationContext, NavigationContext] = createContext<NavigationContextType>();\n","import { BreadcrumbType } from '@/typings/bread';\nimport { getBreadItems, getBreadMap, getRouterMap, getRouterStack, setRouterMap, setRouterStack } from '@/utils/bread';\nimport { useLayoutContext } from '@/utils/context';\nimport { Breadcrumb } from 'antd';\nimport { ItemType } from 'antd/es/breadcrumb/Breadcrumb';\nimport { FC, useEffect, useMemo, useState } from 'react';\nimport { matchRoutes } from 'react-router-dom';\n\nconst BreadcrumbNav: FC<BreadcrumbType> = ({ breadConfig }) => {\n  const location = window.location;\n  const { routes } = useLayoutContext();\n\n  const [breadItems, setBreadItems] = useState<ItemType[]>([]);\n\n  const breadMap = useMemo(() => getBreadMap(breadConfig), [breadConfig]);\n  const pathname = useMemo(() => {\n    const r = matchRoutes(routes, location);\n\n    return r ? r[r.length - 1]?.route.path : '';\n  }, [location.pathname]);\n\n  useEffect(() => {\n    const storage = getRouterMap() || {};\n    if (pathname) {\n      storage[pathname] = {\n        pathname: location.pathname,\n        params: window.location.search,\n      };\n      // 储存每个路由对应的参数\n      setRouterMap(storage);\n    }\n\n    const stack = getRouterStack();\n    if (!stack) return;\n\n    if (stack.slice(-1)[0] !== pathname) {\n      stack.push(pathname);\n    }\n    if (stack.length > 50) {\n      stack.shift();\n    }\n\n    setRouterStack(stack);\n\n    if (pathname) {\n      const items = getBreadItems(stack, breadMap, pathname, routes);\n      setBreadItems(items);\n    }\n  }, [pathname, location?.pathname]);\n\n  return <Breadcrumb items={breadItems} />;\n};\n\nexport default BreadcrumbNav;\n","import { FC, memo } from 'react';\n\nconst Header: FC<React.HTMLAttributes<HTMLDivElement>> = (props) => {\n  const { className } = props;\n\n  return (\n    <header {...props} className={'box-border h-[64px] pr-[12px] flex justify-end items-center ' + className}>\n      {props.children}\n    </header>\n  );\n};\n\nexport default memo(Header);\n","import { Spin } from 'antd';\n\nconst Loading = () => {\n  return (\n    <div className=\"flex justify-center items-center w-full h-full\">\n      <Spin />\n    </div>\n  );\n};\n\nexport default Loading;\n","import { LayoutType } from '@/typings/layout';\nimport { LayoutProvider } from '@/utils/context';\nimport { FC, useEffect, useState } from 'react';\nimport Loading from '../loading';\n\nconst Layout: FC<LayoutType> = ({ children, loading, theme, routes, onExpand, ...restProps }) => {\n  const [isExpanded, setIsExpanded] = useState(true);\n\n  useEffect(() => {\n    onExpand?.(isExpanded);\n  }, [isExpanded]);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <LayoutProvider value={{ isExpanded, setIsExpanded, theme, routes }}>\n      <div {...restProps} className={'min-w-[1400px] ' + restProps.className}>\n        {children}\n      </div>\n    </LayoutProvider>\n  );\n};\n\nexport default Layout;\n","import { useTransitionend } from '@cyberutopian/hooks';\nimport { useMemo, useState } from 'react';\n\ninterface UseNavVisibleType {\n  maxWidth: number;\n  minWidth: number;\n  isExpanded: boolean;\n}\n\nconst useNavVisible = ({ maxWidth, minWidth, isExpanded }: UseNavVisibleType) => {\n  // 获取动画结束的节点\n  const { wrapperDiv: wrapperFatherDiv, transitionend: fatherTransitionend } = useTransitionend();\n  // 导航子组件节点\n  const { wrapperDiv: wrapperChildDiv, transitionend: childTransitionend } = useTransitionend();\n\n  // 聚焦左侧菜单\n  const [activeNav, setActiveNav] = useState(false);\n  // 强制隐藏左侧菜单\n  const [forceHide, setForceHide] = useState(false);\n\n  // 导航宽度\n  const navWidth = useMemo(() => {\n    if (isExpanded) {\n      return maxWidth;\n    }\n    return activeNav ? maxWidth : minWidth;\n  }, [activeNav, isExpanded]);\n\n  // 动画效果\n  let fatherAnimate = false;\n  if (isExpanded) {\n    if (fatherTransitionend) {\n      fatherAnimate = true;\n    }\n  }\n\n  let childAnimate = false;\n  if (activeNav) {\n    if (childTransitionend) {\n      childAnimate = true;\n    }\n  }\n  const showNav = forceHide ? false : childAnimate || fatherAnimate;\n\n  return { wrapperFatherDiv, wrapperChildDiv, navWidth, showNav, setActiveNav, setForceHide };\n};\n\nexport default useNavVisible;\n","import { NavigationMenuType, PageRouterType } from '../typings/navigation';\n\n/** 菜单权限数据 */\nexport const getNavigationData = (\n  list: NavigationMenuType[],\n  fatherKey?: string,\n): {\n  menuMap: Record<string, NavigationMenuType>;\n  menuList: NavigationMenuType[];\n  menuOpenKeyMap: Record<string, string[]>;\n  flatMenuList: NavigationMenuType[];\n} => {\n  let menuMap = {};\n  let menuList: NavigationMenuType[] = [];\n  let flatMenuList: NavigationMenuType[] = [];\n  let menuOpenKeyMap = {};\n\n  for (const [index, item] of list.entries()) {\n    // if (!item.role.includes(role)) continue;\n\n    let map = {};\n    let list: NavigationMenuType[] = [];\n    let keyMap = {};\n\n    if (item.children && item.children.length) {\n      const data = getNavigationData(item.children, item.value);\n      map = data.menuMap;\n      list = data.menuList;\n      keyMap = data.menuOpenKeyMap;\n\n      flatMenuList = flatMenuList.concat(data.flatMenuList);\n    }\n\n    if (item.children && item.children.length) {\n      menuMap = { ...menuMap, ...map };\n    } else {\n      menuMap = { ...menuMap, ...map, [item.route]: { ...item, index } };\n    }\n\n    const data = { ...item, children: list };\n\n    flatMenuList = flatMenuList.concat(item);\n\n    menuList = menuList.concat(data);\n    menuOpenKeyMap = {\n      ...menuOpenKeyMap,\n      ...keyMap,\n      [item.value]: fatherKey ? [fatherKey, data.value].filter(Boolean) : [],\n    };\n  }\n\n  return { menuMap, menuList, menuOpenKeyMap, flatMenuList };\n};\n\n/** 格式化路由数据，菜单 */\nexport const formatNavigationData = (role: string, routes: PageRouterType[], parentPath = ''): any[] => {\n  return (\n    routes\n      .filter(\n        (item) => item.options?.showNav && (role && item.options?.role ? item.options?.role?.includes(role) : true),\n      )\n      .map((item) => ({\n        title: item.options?.title || '',\n        icon: item.options?.icon,\n        route: item.path ? parentPath + item.path : undefined,\n        value: item.options?.title,\n        children: (item.children && formatNavigationData(role, item.children)) || [],\n        role: item.options?.role,\n      })) || []\n  );\n};\n","import { FC, HTMLAttributes } from 'react';\n\nconst SwitchIcon: FC<HTMLAttributes<HTMLDivElement> & { open: boolean }> = ({ open, ...restProps }) => {\n  return (\n    <div {...restProps} className={'icon ' + restProps.className}>\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 1024 1024\" focusable=\"false\" style={{ fill: 'currentColor' }}>\n        {open ? (\n          <path d=\"M864 640L512 288 160 640l68.16 68.16L512 424.32l283.776 283.84L864 640z\"></path>\n        ) : (\n          <path d=\"M864 404.16l-352 352-352-352L228.16 336 512 619.84l283.776-283.84L864 404.16z\"></path>\n        )}\n      </svg>\n    </div>\n  );\n};\n\nexport default SwitchIcon;\n","import { NavigationItemType } from '@/typings/navigation';\nimport { useLayoutContext, useNavigationContext } from '@/utils/context';\nimport { FC, MouseEventHandler, cloneElement, memo, useMemo } from 'react';\nimport SwitchIcon from './switch-icon';\n\nconst NavigationItem: FC<NavigationItemType> = (props) => {\n  const { data, activeKey, setActiveKey, open, setOpen, fatherKeys } = props;\n\n  const { theme } = useLayoutContext();\n  const { showNav, onItemClick } = useNavigationContext();\n\n  const isActive = useMemo(() => data.value === activeKey, [data.value, activeKey]);\n  const childLen = data.children?.length || 0;\n  const hasChild = useMemo(() => !!childLen, [childLen]);\n  const childHeight = useMemo(() => childLen * (44 + 4), [childLen]);\n\n  // 展示子项\n  const showChild = useMemo(() => open.includes(data.value), [open, data.value]);\n  const childFatherKeys = useMemo(() => fatherKeys?.concat(data.value), [fatherKeys, data.value]);\n\n  // 加重字体\n  const bored = useMemo(() => !!fatherKeys.length, [fatherKeys]);\n\n  const iconComponent = data.icon ? (\n    // @ts-ignore\n    cloneElement(data.icon, {\n      className: 'title-16 ' + (isActive ? 'text-text-1' : 'text-text-5') + ' ',\n    })\n  ) : (\n    <div className={data.icon ? '' : 'pl-[12px]'} />\n  );\n\n  const handleClick: MouseEventHandler<HTMLDivElement> = (e) => {\n    e.stopPropagation();\n\n    if (hasChild) {\n      e.preventDefault();\n\n      const keys = showChild ? open.filter((v) => v !== data.value) : open.concat(data.value);\n      setOpen(keys);\n    } else {\n      setActiveKey(data.value);\n    }\n\n    return onItemClick?.(e, data);\n  };\n\n  return (\n    <>\n      <div\n        onClick={handleClick}\n        className={\n          `w-full h-[44px] text-14 box-border px-[14px] py-[11px] mb-[4px] cursor-pointer flex justify-between items-center rounded-[10px] relative z-10 ` +\n          (isActive\n            ? 'text-[#fff]'\n            : bored\n              ? 'text-text-5 hover:bg-[#CEDFEF]'\n              : 'title-14 text-text-6 hover:bg-[#CEDFEF]')\n        }\n      >\n        <div className=\"flex justify-between items-center\">\n          {iconComponent}\n\n          {showNav && (\n            <div className=\"ml-[12px] overflow-hidden\" style={{ width: showNav ? 'auto' : 0 }}>\n              {data.title}\n            </div>\n          )}\n        </div>\n        {hasChild && showNav ? <SwitchIcon className=\"text-14 text-text-5 p-[4px]\" open={showChild} /> : null}\n        {isActive && !hasChild ? (\n          <div\n            className=\"absolute left-0 w-full h-[44px] rounded-[10px] -z-10\"\n            style={{ backgroundColor: theme.color }}\n          />\n        ) : null}\n      </div>\n      <div\n        className=\"transition-[height] duration-300 ease-in-out overflow-hidden\"\n        style={{ height: showChild ? `${childHeight}px` : '0px' }}\n      >\n        {data.children?.map((v: any) => (\n          <NavigationItem key={v.value} {...props} data={v} fatherKeys={childFatherKeys} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default memo(NavigationItem);\n","import { NavigationMenuType } from '@/typings/navigation';\nimport { getRouterStack } from '@/utils/bread';\nimport { useNavigationContext } from '@/utils/context';\nimport { getNavigationData } from '@/utils/navigate';\nimport { FC, memo, useEffect, useMemo, useState } from 'react';\nimport NavigationItem from './navigation-item';\n\nconst NavigationList: FC<{ pathname: string; navigationMenu: NavigationMenuType[] }> = ({\n  pathname,\n  navigationMenu,\n}) => {\n  const { showNav } = useNavigationContext();\n\n  const { menuList, menuMap, flatMenuList } = useMemo(() => getNavigationData(navigationMenu), [navigationMenu]);\n\n  const defaultOpenValue = useMemo(() => menuList.map((v) => v.value), [menuList]);\n\n  const menuRouteList = useMemo(() => Object.keys(menuMap), [menuMap]);\n  // 选中的菜单\n  const [activeKey, setActiveKey] = useState<string | undefined>();\n  // 展开的父菜单\n  const [open, setOpen] = useState<string[]>(defaultOpenValue);\n\n  useEffect(() => {\n    // 首页\n    if (pathname === '/') {\n      setActiveKey(menuMap['/']?.value);\n      setOpen(defaultOpenValue);\n    } else {\n      // eslint-disable-next-line prefer-const\n      let { item, menuChildren } = flatMenuList.reduce(\n        (pre: { item?: NavigationMenuType; menuChildren: boolean }, next: NavigationMenuType) => {\n          if (next.route === pathname) {\n            pre.item = next;\n          }\n          if (next.route && next.route !== '/' && pathname.includes(next.route)) {\n            pre.menuChildren = true;\n          }\n          return pre;\n        },\n        { item: undefined, menuChildren: false },\n      );\n\n      if (!item) {\n        if (menuChildren) {\n          const stack = getRouterStack().reverse();\n          const key = stack.find((v: string) => v !== '/' && menuRouteList.includes(v));\n\n          item = key ? menuMap[key] : undefined;\n        } else {\n          // 非左侧菜单下，不高亮\n          item = undefined;\n        }\n      }\n\n      setActiveKey(item ? item.value : item);\n    }\n\n    if (showNav) {\n      setOpen(defaultOpenValue);\n    } else {\n      setOpen([]);\n    }\n  }, [pathname, showNav, menuRouteList, defaultOpenValue]);\n\n  return (\n    <ul className=\"flex-1 overflow-y-scroll overflow-x-hidden\" style={{ paddingRight: showNav ? '8px' : '' }}>\n      {menuList.map((v) => {\n        const params = {\n          data: v,\n          activeKey,\n          setActiveKey,\n          open,\n          setOpen,\n          showNav: showNav,\n          fatherKeys: [],\n        };\n        return (\n          <li key={v.value}>\n            <NavigationItem {...params} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default memo(NavigationList);\n","import { FC, HTMLAttributes } from 'react';\n\nconst ToggleIcon: FC<HTMLAttributes<HTMLDivElement> & { open: boolean }> = ({ open, ...restProps }) => {\n  return (\n    <div {...restProps} className={'icon ' + restProps.className}>\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 1024 1024\" focusable=\"false\" style={{ fill: 'currentColor' }}>\n        {open ? (\n          <path d=\"M408.512 423.488h518.144V346.496H408.512v76.992z m0 250.496h518.144V596.992H408.512v76.992zM926.72 96H97.664v76.992h828.992V96z m0 751.488H97.664v76.992h828.992v-76.992zM101.888 519.04l193.664 152.512c7.232 5.76 17.856 0.64 17.856-8.512V357.888a11.008 11.008 0 0 0-17.856-8.512L101.888 501.888a10.88 10.88 0 0 0 0 17.152z\"></path>\n        ) : (\n          <path d=\"M408.512 423.488h518.144V346.496H408.512v76.992z m0 250.496h518.144V596.992H408.512v76.992zM926.72 96H97.664v76.992h828.992V96z m0 751.488H97.664v76.992h828.992v-76.992zM309.248 519.04l-193.728 152.512a11.008 11.008 0 0 1-17.856-8.512V357.888c0-9.152 10.56-14.208 17.92-8.512l193.664 152.512a10.88 10.88 0 0 1 0 17.152z\"></path>\n        )}\n      </svg>\n    </div>\n  );\n};\n\nexport default ToggleIcon;\n","import { NavigationType } from '@/typings/navigation';\nimport { NavigationProvider, useLayoutContext } from '@/utils/context';\nimport { FC, MouseEventHandler, memo, useEffect } from 'react';\nimport { matchRoutes } from 'react-router-dom';\nimport useNavVisible from '../../hooks/useNavVisible';\nimport NavigationList from './navigation-list';\nimport ToggleIcon from './toggle-icon';\n\nconst Navigation: FC<NavigationType> = ({\n  maxWidth,\n  minWidth,\n  foldUpPath,\n  navigationMenu,\n  onItemClick,\n  titleRender,\n  ...restProps\n}) => {\n  // 全局状态\n  const { isExpanded, setIsExpanded, routes, theme } = useLayoutContext();\n\n  const { wrapperFatherDiv, wrapperChildDiv, setActiveNav, setForceHide, navWidth, showNav } = useNavVisible({\n    maxWidth,\n    minWidth,\n    isExpanded,\n  });\n\n  const pathname = window.location.pathname;\n\n  useEffect(() => {\n    const routers = matchRoutes(routes, window.location);\n    const path = routers ? routers[routers.length - 1]?.route.path : '';\n\n    if (path && foldUpPath.includes(path as never)) {\n      setIsExpanded(false);\n      // 强制隐藏菜单\n      setForceHide(true);\n      setActiveNav(false);\n    }\n  }, [pathname]);\n\n  const onMouseEnter = () => {\n    if (isExpanded) return;\n    setActiveNav(true);\n    setForceHide(false);\n  };\n\n  const onMouseLeave = () => {\n    if (isExpanded) return;\n    setActiveNav(false);\n    setForceHide(false);\n  };\n\n  const toggleNavigation: MouseEventHandler<HTMLDivElement> = (e) => {\n    e.stopPropagation();\n\n    setIsExpanded((v) => !v);\n  };\n\n  return (\n    <NavigationProvider value={{ showNav, onItemClick }}>\n      <nav\n        {...restProps}\n        className={'relative h-full transition-[width] duration-300 ease-in-out z-50 ' + restProps.className}\n        style={{\n          ...restProps.style,\n          width: `${isExpanded ? maxWidth : minWidth}px`,\n        }}\n        ref={wrapperFatherDiv}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <section\n          className=\"px-[8px] pr-[4px] box-border h-full overflow-x-hidden transition-[width] duration-300 ease-in-out bg-[#EEF5FB] z-70 flex flex-col\"\n          ref={wrapperChildDiv}\n          style={{\n            width: navWidth,\n            top: '0px',\n            left: '0px',\n            position: isExpanded ? 'static' : 'absolute',\n            backgroundColor: theme.bg,\n          }}\n        >\n          {titleRender?.(showNav)}\n\n          <NavigationList pathname={pathname} navigationMenu={navigationMenu} />\n\n          <div className=\"text-right pb-[12px] mt-[8px] overflow-hidden\" style={{ width: maxWidth - 16 }}>\n            <ToggleIcon\n              className=\"text-16 cursor-pointer p-[6px] rounded-[4px] bg-[#F7FBFF]\"\n              open={isExpanded}\n              onClick={toggleNavigation}\n            />\n          </div>\n        </section>\n      </nav>\n    </NavigationProvider>\n  );\n};\n\nexport default memo(Navigation);\n"],"names":["listCacheClear","_listCacheClear","eq","value","other","eq_1","require$$0","assocIndexOf","array","key","length","_assocIndexOf","arrayProto","splice","listCacheDelete","data","index","lastIndex","_listCacheDelete","listCacheGet","_listCacheGet","listCacheHas","_listCacheHas","listCacheSet","_listCacheSet","require$$1","require$$2","require$$3","require$$4","ListCache","entries","entry","_ListCache","stackClear","_stackClear","stackDelete","result","_stackDelete","stackGet","_stackGet","stackHas","_stackHas","freeGlobal","global","_freeGlobal","freeSelf","root","_root","Symbol","_Symbol","objectProto","hasOwnProperty","nativeObjectToString","symToStringTag","getRawTag","isOwn","tag","unmasked","_getRawTag","objectToString","_objectToString","nullTag","undefinedTag","baseGetTag","_baseGetTag","isObject","type","isObject_1","asyncTag","funcTag","genTag","proxyTag","isFunction","isFunction_1","coreJsData","_coreJsData","maskSrcKey","uid","isMasked","func","_isMasked","funcProto","funcToString","toSource","_toSource","reRegExpChar","reIsHostCtor","reIsNative","baseIsNative","pattern","_baseIsNative","getValue","object","_getValue","getNative","_getNative","Map","_Map","nativeCreate","_nativeCreate","hashClear","_hashClear","hashDelete","_hashDelete","HASH_UNDEFINED","hashGet","_hashGet","hashHas","_hashHas","hashSet","_hashSet","Hash","_Hash","mapCacheClear","_mapCacheClear","isKeyable","_isKeyable","getMapData","map","_getMapData","mapCacheDelete","_mapCacheDelete","mapCacheGet","_mapCacheGet","mapCacheHas","_mapCacheHas","mapCacheSet","size","_mapCacheSet","MapCache","_MapCache","LARGE_ARRAY_SIZE","stackSet","pairs","_stackSet","require$$5","Stack","_Stack","setCacheAdd","_setCacheAdd","setCacheHas","_setCacheHas","SetCache","values","_SetCache","arraySome","predicate","_arraySome","cacheHas","cache","_cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalArrays","bitmask","customizer","equalFunc","stack","isPartial","arrLength","othLength","arrStacked","othStacked","seen","arrValue","othValue","compared","othIndex","_equalArrays","Uint8Array","_Uint8Array","mapToArray","_mapToArray","setToArray","set","_setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","equalByTag","convert","stacked","_equalByTag","arrayPush","offset","_arrayPush","isArray","isArray_1","baseGetAllKeys","keysFunc","symbolsFunc","_baseGetAllKeys","arrayFilter","resIndex","_arrayFilter","stubArray","stubArray_1","propertyIsEnumerable","nativeGetSymbols","getSymbols","symbol","_getSymbols","baseTimes","n","iteratee","_baseTimes","isObjectLike","isObjectLike_1","argsTag","baseIsArguments","_baseIsArguments","isArguments","isArguments_1","stubFalse","stubFalse_1","freeExports","exports","freeModule","module","moduleExports","Buffer","nativeIsBuffer","isBuffer","MAX_SAFE_INTEGER","reIsUint","isIndex","_isIndex","isLength","isLength_1","arrayTag","objectTag","weakMapTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","typedArrayTags","baseIsTypedArray","_baseIsTypedArray","baseUnary","_baseUnary","freeProcess","nodeUtil","types","nodeIsTypedArray","isTypedArray","isTypedArray_1","arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","skipIndexes","_arrayLikeKeys","isPrototype","Ctor","proto","_isPrototype","overArg","transform","arg","_overArg","nativeKeys","_nativeKeys","baseKeys","_baseKeys","isArrayLike","isArrayLike_1","keys","keys_1","getAllKeys","_getAllKeys","equalObjects","objProps","objLength","othProps","objStacked","skipCtor","objValue","objCtor","othCtor","_equalObjects","DataView","_DataView","Promise","_Promise","Set","_Set","WeakMap","_WeakMap","require$$6","promiseTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ctorString","_getTag","require$$7","baseIsEqualDeep","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","_baseIsEqualDeep","baseIsEqual","_baseIsEqual","isEqual","isEqual_1","Action","invariant","message","warning","cond","parsePath","path","parsedPath","hashIndex","searchIndex","ResultType","matchRoutes","routes","locationArg","basename","matchRoutesImpl","allowPartial","location","pathname","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","i","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","meta","joinPaths","routesMeta","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","required","restExploded","subpath","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","score","segment","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","normalizePathname","matcher","compiledParams","compilePath","pathnameBase","captureGroups","memo","_ref","paramName","splatValue","caseSensitive","params","regexpSource","_","v","error","startIndex","nextChar","paths","validMutationMethodsArr","validRequestMethodsArr","f","k","l","m","p","q","c","g","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","getRouterStoreName","name","user","window","localStorage","getItem","JSON","parse","log","setRouterStack","setItem","stringify","getRouterStack","setRouterMap","getRouterMap","getDetail","undefined","same","routerParams","href","replace","title","className","children","options","getRouterMatch","baseArr","routerArr","baseEnd","routerEnd","j","indexArr","countSearch","base","push","compareIndex","old","current","bigger","getBreadItems","breadMap","matchStack","iterator","items","reverseMatchStack","slice","reverse","reverseStack","arr","Object","list","len","filter","Boolean","iA","Array","getBreadMap","breadConfig","setMap","obj","concat","rootName","nN","G","Pt","Ge","Lt","xt","It","A","Rt","Dt","ae","ce","He","Mt","Gt","M","Ht","qt","zt","Ft","Nt","Ut","ue","Bt","Kt","Wt","Vt","le","Jt","K","Xt","qe","Yt","Zt","Qt","kt","er","tr","rr","ze","ar","nr","sr","X","fe","or","ir","cr","ur","lr","Fe","fr","pr","vr","dr","gr","hr","_r","yr","br","$r","Sr","Tr","wr","Ar","mr","Cr","Er","Or","L","jr","Pr","Lr","ne","xr","un","de","he","es","J","ts","rs","as","ns","ss","ye","os","Be","is","cs","z","fs","ps","o","u","F","Ys","be","Bo","Ko","Wo","Vo","Jo","Xo","Yo","Zo","Qo","ko","ei","ti","ri","ai","ni","si","Q","ee","te","re","Je","Te","oi","we","Ae","me","Ce","ii","ci","ui","li","fi","E","Gi","O","w","Hi","oe","CyberLayoutProvider","useCyberLayoutContext","CyberLayoutContext","createContext","LayoutProvider","useLayoutContext","LayoutContext","NavigationProvider","useNavigationContext","NavigationContext","BreadcrumbNav","breadItems","setBreadItems","useState","useMemo","r","useEffect","storage","search","shift","Breadcrumb","Header","props","Loading","_jsx","Spin","Layout","loading","theme","onExpand","restProps","isExpanded","setIsExpanded","useNavVisible","maxWidth","minWidth","wrapperFatherDiv","fatherTransitionend","useTransitionend","wrapperChildDiv","childTransitionend","activeNav","setActiveNav","forceHide","setForceHide","navWidth","fatherAnimate","childAnimate","getNavigationData","fatherKey","menuMap","menuList","flatMenuList","menuOpenKeyMap","item","keyMap","formatNavigationData","role","_a","_b","_d","_c","SwitchIcon","open","width","height","viewBox","focusable","style","fill","NavigationItem","activeKey","setActiveKey","setOpen","fatherKeys","showNav","onItemClick","isActive","childLen","hasChild","childHeight","showChild","includes","childFatherKeys","bored","iconComponent","icon","cloneElement","_Fragment","_jsxs","onClick","stopPropagation","preventDefault","backgroundColor","color","NavigationList","navigationMenu","defaultOpenValue","menuRouteList","menuChildren","reduce","pre","next","find","paddingRight","ToggleIcon","Navigation","foldUpPath","titleRender","routers","onMouseEnter","onMouseLeave","toggleNavigation","ref","top","left","position","bg"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91]}